{"version":3,"sources":["data.geojson","parcele.geojson","App.js","index.js"],"names":["mapboxgl","accessToken","App","React","PureComponent","constructor","props","super","this","state","lng","lat","zoom","mapContainer","createRef","componentDidMount","map","Map","container","current","style","center","on","setState","getCenter","toFixed","getZoom","addSource","setTerrain","addLayer","once","data","parcele","render","className","ref","ReactDOM","StrictMode","document","getElementById"],"mappings":"sOAAe,MAA0B,qCCA1B,MAA0B,wC,OCQzCA,IAASC,YAAc,2FAER,MAAMC,UAAYC,IAAMC,cACrCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,IAAK,mBACLC,IAAK,mBACLC,KAAM,GAERJ,KAAKK,aAAeV,IAAMW,YAE5BC,oBACE,MAAM,IACJL,EADI,IAEJC,EAFI,KAGJC,GACEJ,KAAKC,MACHO,EAAM,IAAIhB,IAASiB,IAAI,CAC3BC,UAAWV,KAAKK,aAAaM,QAC7BC,MAAO,qCACPC,OAAQ,CAACX,EAAKC,GACdC,KAAMA,IAGRI,EAAIM,GAAG,QAAQ,KACbd,KAAKe,SAAS,CACZb,IAAKM,EAAIQ,YAAYd,IAAIe,QAAQ,GACjCd,IAAKK,EAAIQ,YAAYb,IAAIc,QAAQ,GACjCb,KAAMI,EAAIU,UAAUD,QAAQ,QAIhCT,EAAIM,GAAG,QAAQ,KACbN,EAAIW,UAAU,aAAc,CAC1B,KAAQ,aACR,IAAO,wCACP,SAAY,IACZ,QAAW,KAGbX,EAAIY,WAAW,CACb,OAAU,aACV,aAAgB,MAIlBZ,EAAIa,SAAS,CACX,GAAM,MACN,KAAQ,MACR,MAAS,CACP,WAAY,aACZ,qBAAsB,CAAC,EAAK,GAC5B,+BAAgC,SAStCb,EAAIc,KAAK,QAAQ,WAGfd,EAAIW,UAAU,OAAQ,CACpB,KAAQ,UACR,KAAQI,IAkBVf,EAAIa,SAAS,CACX,GAAM,SACN,KAAQ,OACR,OAAU,OACV,OAAU,GACV,MAAS,CACP,aAAc,CACZ,QACA,CAAC,MAAO,SACR,OACA,UACA,aACA,UACA,QACA,UACA,cACA,UACA,QACA,UACA,QACA,UACA,OACA,UACA,SACA,UACA,QACA,UACA,gBACA,UACA,iBACA,UACA,qBACA,UACA,cACA,UAEA,eAGF,eAAgB,EAChB,qBAAsB,iBAK1Bb,EAAIW,UAAU,UAAW,CACvB,KAAQ,UACR,KAAQK,IAGVhB,EAAIa,SAAS,CACX,GAAM,QACN,KAAQ,OACR,OAAU,UACV,OAAU,GACV,MAAS,CACP,aAAc,CACZ,QACA,CAAC,MAAO,SACR,OACA,UACA,aACA,UACA,QACA,UACA,cACA,UACA,QACA,UACA,QACA,UACA,OACA,UACA,SACA,UACA,QACA,UACA,gBACA,UACA,iBACA,UACA,qBACA,UACA,cACA,UAEA,eAGF,eAAgB,EAChB,qBAAsB,oBAU9BI,SACE,MAAM,IACJvB,EADI,IAEJC,EAFI,KAGJC,GACEJ,KAAKC,MACT,OAAS,gCACP,sBACIyB,UAAY,UADhB,wBAGExB,EAHF,gBAKEC,EALF,YAOEC,EAPF,OADO,IASG,qBAAKuB,IACf3B,KAAKK,aAEPqB,UAAY,sBC7MhBE,IAASH,OACT,cAAC,IAAMI,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.ebee2699.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/data.46fd98fd.geojson\";","export default __webpack_public_path__ + \"static/media/parcele.aed37ad1.geojson\";","import React from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport data from \"./data.geojson\";\r\nimport parcele from \"./parcele.geojson\";\r\n/*import obala from \"./obala.geojson\";\r\nimport obalasjena from \"./obalasjena.geojson\";\r\nimport parcele from \"./parcele.geojson\";*/\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoib2xpc2hyIiwiYSI6ImNrZjVwZWg5NzBveXozMW9mZ2V1bXl2MHYifQ.aetx6rI5xii820zCaRyYYA';\r\n\r\nexport default class App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 13.629608799339701,\r\n      lat: 45.124076676208524,\r\n      zoom: 9\r\n    };\r\n    this.mapContainer = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n      lng,\r\n      lat,\r\n      zoom\r\n    } = this.state;\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer.current,\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [lng, lat],\r\n      zoom: zoom\r\n    });\r\n\r\n    map.on('move', () => {\r\n      this.setState({\r\n        lng: map.getCenter().lng.toFixed(4),\r\n        lat: map.getCenter().lat.toFixed(4),\r\n        zoom: map.getZoom().toFixed(2)\r\n      });\r\n    });\r\n\r\n    map.on('load', () => {\r\n      map.addSource('mapbox-dem', {\r\n        'type': 'raster-dem',\r\n        'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\r\n        'tileSize': 512,\r\n        'maxzoom': 14\r\n      });\r\n      // add the DEM source as a terrain layer with exaggerated height\r\n      map.setTerrain({\r\n        'source': 'mapbox-dem',\r\n        'exaggeration': 1.5\r\n      });\r\n\r\n      // add a sky layer that will show when the map is highly pitched\r\n      map.addLayer({\r\n        'id': 'sky',\r\n        'type': 'sky',\r\n        'paint': {\r\n          'sky-type': 'atmosphere',\r\n          'sky-atmosphere-sun': [0.0, 0.0],\r\n          'sky-atmosphere-sun-intensity': 15\r\n        }\r\n      });\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n    map.once(\"load\", function() {\r\n\r\n\r\n      map.addSource('data', {\r\n        'type': 'geojson',\r\n        'data': data\r\n      });\r\n\r\n      /*map.addSource('obala', {\r\n        'type': 'geojson',\r\n        'data': obala\r\n      });\r\n\r\n      map.addSource('obalasjena', {\r\n        'type': 'geojson',\r\n        'data': obalasjena\r\n      });\r\n\r\n      map.addSource('parcele', {\r\n        'type': 'geojson',\r\n        'data': parcele\r\n      });*/\r\n\r\n      map.addLayer({\r\n        'id': 'maine2',\r\n        'type': 'fill',\r\n        'source': 'data', // reference the data source\r\n        'layout': {},\r\n        'paint': {\r\n          'fill-color': [\r\n            'match',\r\n            ['get', 'class'],\r\n            'more',\r\n            '#cad2d3',\r\n            'obalasjena',\r\n            '#c8cac9',\r\n            'obala',\r\n            '#e6e4e0',\r\n            'obalasjena2',\r\n            '#c4c1ba',\r\n            'cesta',\r\n            '#ffffff',\r\n            'trava',\r\n            '#b6e59e',\r\n            'sivi',\r\n            '#dddddd',\r\n            'objekt',\r\n            '#f44f44',\r\n            'bazen',\r\n            '#75cff0',\r\n            'parcela plava',\r\n            '#66b3d0',\r\n            'parcela zelena',\r\n            '#71e396',\r\n            'parcela narancasta',\r\n            '#ffac35',\r\n            'parcela bez',\r\n            '#e3ad71',\r\n            /* other */\r\n            'transparent'\r\n\r\n          ],\r\n          'fill-opacity': 1,\r\n          'fill-outline-color': 'transparent',\r\n        }\r\n      });\r\n\r\n\r\n      map.addSource('parcele', {\r\n        'type': 'geojson',\r\n        'data': parcele\r\n      });\r\n\r\n      map.addLayer({\r\n        'id': 'maine',\r\n        'type': 'fill',\r\n        'source': 'parcele', // reference the data source\r\n        'layout': {},\r\n        'paint': {\r\n          'fill-color': [\r\n            'match',\r\n            ['get', 'class'],\r\n            'more',\r\n            '#cad2d3',\r\n            'obalasjena',\r\n            '#c8cac9',\r\n            'obala',\r\n            '#e6e4e0',\r\n            'obalasjena2',\r\n            '#c4c1ba',\r\n            'cesta',\r\n            '#ffffff',\r\n            'trava',\r\n            '#b6e59e',\r\n            'sivi',\r\n            '#dddddd',\r\n            'objekt',\r\n            '#f44f44',\r\n            'bazen',\r\n            '#75cff0',\r\n            'parcela plava',\r\n            '#66b3d0',\r\n            'parcela zelena',\r\n            '#71e396',\r\n            'parcela narancasta',\r\n            '#ffac35',\r\n            'parcela bez',\r\n            '#e3ad71',\r\n            /* other */\r\n            'transparent'\r\n\r\n          ],\r\n          'fill-opacity': 1,\r\n          'fill-outline-color': 'transparent',\r\n        }\r\n      });\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n  }\r\n  render() {\r\n    const {\r\n      lng,\r\n      lat,\r\n      zoom\r\n    } = this.state;\r\n    return ( < div >\r\n      <\r\n      div className = \"sidebar\" >\r\n      Longitude: {\r\n        lng\r\n      } | Latitude: {\r\n        lat\r\n      } | Zoom: {\r\n        zoom\r\n      } < /div> <div ref = {\r\n      this.mapContainer\r\n    }\r\n    className = \"map-container\" / >\r\n      <\r\n      /div>\r\n  );\r\n}\r\n\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './index.css';\r\nimport App from './App';\r\n \r\nReactDOM.render(\r\n<React.StrictMode>\r\n<App />\r\n</React.StrictMode>,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}